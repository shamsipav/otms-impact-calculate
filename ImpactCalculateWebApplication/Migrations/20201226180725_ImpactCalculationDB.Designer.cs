// <auto-generated />
using System;
using ImpactCalculateWebApplication;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ImpactCalculateWebApplication.Migrations
{
    [DbContext(typeof(ImpactCalculationDBContext))]
    [Migration("20201226180725_ImpactCalculationDB")]
    partial class ImpactCalculationDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ImpactCalculateWebApplication.Models.A_AV_VW", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("A")
                        .HasColumnType("REAL");

                    b.Property<double>("V_Alpha")
                        .HasColumnType("REAL");

                    b.Property<double>("V_Waste")
                        .HasColumnType("REAL");

                    b.HasKey("Key");

                    b.ToTable("A_AV_VW");
                });

            modelBuilder.Entity("ImpactCalculateWebApplication.Models.InputDataModel", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Air_Pressure")
                        .HasColumnType("REAL");

                    b.Property<double>("Air_Spend")
                        .HasColumnType("REAL");

                    b.Property<double>("Air_Temperature")
                        .HasColumnType("REAL");

                    b.Property<double>("CO2_Percentage")
                        .HasColumnType("REAL");

                    b.Property<double>("CO_Percentage")
                        .HasColumnType("REAL");

                    b.Property<double>("Melt_Temperature")
                        .HasColumnType("REAL");

                    b.Property<double>("N2_Percentage")
                        .HasColumnType("REAL");

                    b.Property<double>("O2_Percentage")
                        .HasColumnType("REAL");

                    b.Property<double>("Smoke_Temperature")
                        .HasColumnType("REAL");

                    b.Property<double>("Viscosity")
                        .HasColumnType("REAL");

                    b.HasKey("Key");

                    b.ToTable("Inputs");
                });

            modelBuilder.Entity("ImpactCalculateWebApplication.Models.ResultDataModel", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeviceKey")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GasKey")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Waste_Difference")
                        .HasColumnType("REAL");

                    b.HasKey("Key");

                    b.HasIndex("DeviceKey");

                    b.HasIndex("GasKey");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("ImpactCalculateWebApplication.Models.ResultDataModel", b =>
                {
                    b.HasOne("ImpactCalculateWebApplication.Models.A_AV_VW", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceKey");

                    b.HasOne("ImpactCalculateWebApplication.Models.A_AV_VW", "Gas")
                        .WithMany()
                        .HasForeignKey("GasKey");

                    b.Navigation("Device");

                    b.Navigation("Gas");
                });
#pragma warning restore 612, 618
        }
    }
}
